name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_call: { }

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build_setup
      - name: Run Lint
        run: ./gradlew :app:lintPlayDebug
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-report
          path: app/build/reports/**/*.html

  unit:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build_setup
      - name: Run Unit Tests + Build
        run: ./gradlew voiceUnitTest lintKotlin :app:assemblePlayDebug
      - name: Publish JUnit Report
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          report_paths: '**/test-results/**/TEST-*.xml'
          check_name: "Unit Tests"
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/**/*.apk

  instrumentation:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build_setup
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Accept Android Licenses
        run: yes | "$ANDROID_HOME"/cmdline-tools/latest/bin/sdkmanager --licenses || true
      - name: Setup Managed Devices
        run: ./gradlew voiceDeviceSetup -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"
      - name: Run Instrumentation Tests
        run: ./gradlew voiceDeviceGithubDebugAndroidTest -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"
      - name: Publish JUnit Report
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          report_paths: '**/test-results/**/TEST-*.xml'
          check_name: "Instrumentation Tests"
